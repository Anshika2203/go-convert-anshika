pipeline {
    agent any
    
    tools {
        ant 'Ant Old'
        gradle 'GradleNew'
        maven 'MavenNew'
    }
    
    stages {
        stage('Plugin Build') {
            steps {
                script {
                    // Perform the checkout
                    checkout([
                        $class: 'GitSCM',
                        branches: [[name: '*/main']],
                        doGenerateSubmoduleConfigurations: false,
                        extensions: [],
                        submoduleCfg: [],
                        userRemoteConfigs: [[url: 'https://github.com/Anshika2203/CombinedAllBuilds.git']]
                    ])
                    
                    // Use Maven to build
                    withMaven {
                    sh "mvn clean install\
                        package"
                    }
                    
                    // Use Ant to build
                    withAnt {
                        sh 'ant build'
                    }
                    
                    // Use Gradle to build
                    withGradle {
                        sh 'gradle build'
                    }
                }
            }
        }
        
        stage('ReadWriteFile') {
            steps {
                script {
                    writeFile file: 'output1.txt', text: '''line1 

line2

line3'''
                    readFile file: 'output1.txt'
                }
            }
        }

        stage('DeleteDirStep') {
            steps {
                script {
                    // Create files in target directory
                    sh '''
                      mkdir -p target
                      touch target/file4.txt
                      touch target/file5.txt
                      touch target/file6.txt
                    '''
                    
                    // List files before deletion
                    sh 'ls'
                    
                    // Delete the target directory
                    dir('target') {
                        deleteDir()
                    }
                    
                    // List files after deletion
                    sh 'ls'
                }
            }
        }
        
        stage('Blackduck') {
            steps {
                synopsys_detect "--blackduck.url=https://harness.app.blackduck.com/ --blackduck.api.token=MzRkNDVkOWMtM2UzZS00OTgzLWE5ZmItOWNlOGI3NTlhZDZjOjVmNWE3NTE2LTdmYjYtNGNmMy05YmQyLWFkODRmNDNjYzhlMw== --detect.project.name=jenkinstestFinal --detect.project.version.name=v1.0"
            }
        }
        stage('Code Analysis') {
            environment {
                scannerHome = tool 'sonar_cube'
            }
            steps {
                script {
                    withSonarQubeEnv('Sonar') {
                        sh "${scannerHome}/bin/sonar-scanner \
                            -Dsonar.projectKey=jenkins-SonarCube \
                            -Dsonar.projectName=jenkins-SonarCube \
                            -Dsonar.sources=."
                    }
                }
            }
        }
    }
}